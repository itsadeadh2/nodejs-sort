AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Express.js app as Lambda with URL

Parameters:
  SourceCommit:
    Type: String
    Description: The commit that originated this deployment. Helps trigger new deploys to the lambda.

Resources:
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-${SourceCommit}"
      Handler: lambda.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Code:
        S3Bucket: node-sort-bucket
        S3Key: lambda.zip
      Runtime: nodejs18.x
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref LambdaLayer

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaBasicExecution"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  MyLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt MyLambdaFunction.Arn
      Principal: apigateway.amazonaws.com

  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub "${AWS::StackName}-${SourceCommit}"
      CompatibleRuntimes:
        - nodejs18.x
      Content:
        S3Bucket: node-sort-bucket
        S3Key: dependencies.zip

  # Lambda URL
  LambdaUrl:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt MyLambdaFunction.Arn

  # Lambda Permission for the URL
  LambdaPermissionForUrl:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt MyLambdaFunction.Arn
      Action: lambda:InvokeFunctionUrl
      Principal: '*'
      FunctionUrlAuthType: NONE

Outputs:
  LambdaFunctionUrl:
    Description: "URL for the Lambda function"
    Value: !GetAtt LambdaUrl.FunctionUrl
    Export:
      Name: LambdaFunctionUrl
